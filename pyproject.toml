[build-system]
requires = ["setuptools>=77.0.3", "versioningit"]
build-backend = "setuptools.build_meta"

# Self-descriptive entries which should always be present
# https://packaging.python.org/en/latest/specifications/declaring-project-metadata/
[project]
name = "ofe-sphinx-theme"
description = "Sphinx theme for Open Free Energy software based on the PyData theme."
dynamic = ["version"]
readme = "README.md"
authors = [
    { name = "The OpenFE developers", email = "openfreeenergy@omsf.io" }
]
license = "MIT"
license-files = ["LICENSE"]
# See https://pypi.org/classifiers/
classifiers = [
    "Programming Language :: Python :: 3",
]
requires-python = ">=3.9"
# Declare any run-time dependencies that should be installed with the package.
dependencies = [
   "pydata-sphinx-theme==0.16.*",
   "libsass",
]

# Update the urls once the hosting is set up.
#[project.urls]
#"Source" = "https://github.com/openfreeenergy/ofe_sphinx_theme/"
#"Documentation" = "https://ofe_sphinx_theme.readthedocs.io/"

[project.optional-dependencies]
test = [
  "pytest>=6.1.2",
  "pytest-runner"
]

[project.entry-points."sphinx.html_themes"]
ofe_sphinx_theme = "ofe_sphinx_theme"

[tool.setuptools]
# This subkey is a beta stage development and keys may change in the future, see https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html for more details
#
# As of version 0.971, mypy does not support type checking of installed zipped
# packages (because it does not actually import the Python packages).
# We declare the package not-zip-safe so that our type hints are also available
# when checking client code that uses our (installed) package.
# Ref:
# https://mypy.readthedocs.io/en/stable/installed_packages.html?highlight=zip#using-installed-packages-with-mypy-pep-561
zip-safe = false
# Let setuptools discover the package in the current directory
include-package-data = true

[tool.setuptools.packages.find]
namespaces = true
where = ["."]

[tool.versioningit]
default-version = "1+unknown"

[tool.versioningit.format]
distance = "{base_version}+{distance}.{vcs}{rev}"
dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"
distance-dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"

[tool.versioningit.vcs]
method = "git" 
match = ["*"]
default-tag = "0.0.0"
